---

java_version: "{{ '11' if ( kafka_version == '2.13-2.4.1')}}"
java_packet: "java-{{java_version}}-openjdk-headless"

zookeeper_version: "{{ '3.5.8' if ( kafka_version == '2.13-2.4.1' ) }}"
zookeeper_package: "apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
zookeeper_package_checksum: "{% 
  if zookeeper_version == '3.5.8' %}sha256:c35ed6786d59b73920243f1a324d24c2ddfafb379041d7a350cc9a341c52caf3{%
  endif %}"
kafka_package: kafka_{{ kafka_version }}.tgz
kafka_package_checksum: "{%
  if kafka_version == '2.13-2.4.1' %}sha256:a7549b2333620c916ae47d444c9f104ba64be559c242b1cceb987d4dbd9d9c30{%
  endif %}"

app_dir: /app
distributes_dir: "{{app_dir}}/distrib"
zookeeper_data: "{{ app_dir }}/data/zookeeper"
zookeeper_log: "{{ app_dir }}/log/zookeeper"
zookeeper_dir: "{{app_dir}}/zookeeper"
kafka_var_log: "{{ app_dir }}/log/kafka"
kafka_dir: "{{ app_dir }}/kafka"
kafka_log_dirs: "{{ app_dir }}/data/kafka"
kafka_lib_dir: "{{ kafka_dir }}/libs"
app_dirs_zookeeper:
  - '{{ app_dir }}'
  - '{{ distributes_dir }}'
  - '{{ zookeeper_data }}'
  - '{{ zookeeper_log }}'
  - '{{ zookeeper_dir }}'
app_dirs_kafka:
  - '{{ app_dir }}'
  - '{{ distributes_dir }}'
  - '{{ kafka_var_log }}'
  - '{{ kafka_dir }}'
  - '{{ kafka_log_dirs }}'
  - '{{ kafka_lib_dir }}'

app_user_group: kafka

# Zookeeper variables
zookeeper_id: 1
tick_time: 2000
client_port: 2181
init_limit: 5
sync_limit: 2
zookeeper_max_client_connections: 60
zookeeper_autopurge_purgeInterval: 0
zookeeper_autopurge_snapRetainCount: 10
zookeeper_cluster_followers_port: 2888
zookeeper_cluster_election_port: 3888
zookeeper_cluster_ports: "{{ zookeeper_cluster_followers_port }}:{{ zookeeper_cluster_election_port }}"
zk_ssl_enable: False
zk_quorum_ssl_enable: False

# Kafka variables
kafka_listener_port: 9092
min_insync_replicas: 1
kafka_default_replication_factor: 1
consumer_offsets_replication_factor: 1
transaction_state_log_replication_factor: 1
kafka_ssl_enable: False
cruisecontrol_enable: False
zookeeper_instances: "{% for node in groups['zookeeper'] %}{{ node }}:{{ client_port | default('2181') }}{% if not loop.last %},{% endif %}{% endfor %}"
kafka_instances: "{% for node in groups['kafka'] %}{{ node }}:{{kafka_listener_port}}{% if not loop.last %},{% endif %}{% endfor %}"